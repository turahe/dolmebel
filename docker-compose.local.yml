services:
    traefik:
        image: traefik:v3.0
        container_name: dolmebel-traefik-local
        restart: unless-stopped
        command:
            - --api.dashboard=true
            - --api.insecure=true
            - --providers.docker=true
            - --providers.docker.exposedbydefault=false
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --log.level=INFO
            - --accesslog=true
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"  # Traefik dashboard
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        networks:
            - turahe
        labels:
            - traefik.enable=true
            - traefik.http.routers.traefik.rule=Host(`traefik.dolmebel.local`)
            - traefik.http.routers.traefik.entrypoints=web
            - traefik.http.services.traefik.loadbalancer.server.port=8080

    app:
        build:
            context: ./docker/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: turahe/dolmebel
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        # Vite dev server accessible from host
        ports:
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_turahe: 1
            XDEBUG_MODE: '${turahe_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${turahe_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
            APP_ENV: local
            APP_DEBUG: true
        volumes:
            - '.:/var/www/html'
        networks:
            - turahe
        depends_on:
            - pgsql
            - redis
            - meilisearch
            - minio
            - mailpit
            - rabbitmq
            - soketi
        labels:
            - traefik.enable=true
            - traefik.http.routers.app.rule=Host(`dolmebel.local`)
            - traefik.http.routers.app.entrypoints=web
            - traefik.http.services.app.loadbalancer.server.port=80
            - traefik.http.middlewares.app-headers.headers.customrequestheaders.X-Forwarded-Proto=http
            - traefik.http.routers.app.middlewares=app-headers

    pgsql:
        image: 'postgres:17-alpine'
        # Database accessible through app container only
        # ports:
        #     - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - './data/postgres:/var/lib/postgresql/data'
            - './docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - turahe
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s

    redis:
        image: 'redis:alpine'
        # Redis accessible through app container only
        # ports:
        #     - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - './data/redis:/data'
        networks:
            - turahe
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s

    meilisearch:
        image: 'getmeili/meilisearch:latest'
        # Meilisearch accessible through app container only
        # ports:
        #     - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        environment:
            MEILI_NO_ANALYTICS: '${MEILISEARCH_NO_ANALYTICS:-false}'
        volumes:
            - './data/meilisearch:/meili_data'
        networks:
            - turahe
        healthcheck:
            test:
                - CMD
                - wget
                - '--no-verbose'
                - '--spider'
                - 'http://127.0.0.1:7700/health'
            retries: 3
            timeout: 5s

    minio:
        image: 'minio/minio:latest'
        # MinIO accessible through app container only
        # ports:
        #     - '${FORWARD_MINIO_PORT:-9000}:9000'
        #     - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
        environment:
            MINIO_ROOT_USER: turahe
            MINIO_ROOT_PASSWORD: password
        volumes:
            - './data/minio:/data'
        networks:
            - turahe
        command: 'minio server /data --console-address ":8900"'
        healthcheck:
            test:
                - CMD
                - mc
                - ready
                - local
            retries: 3
            timeout: 5s

    mailpit:
        image: 'axllent/mailpit:latest'
        # Mailpit accessible through app container only
        # ports:
        #     - '${FORWARD_MAILPIT_PORT:-1025}:1025'
        #     - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - turahe
        labels:
            - traefik.enable=true
            - traefik.http.routers.mailpit.rule=Host(`mailpit.dolmebel.local`)
            - traefik.http.routers.mailpit.entrypoints=web
            - traefik.http.services.mailpit.loadbalancer.server.port=8025

    rabbitmq:
        image: 'rabbitmq:4-management-alpine'
        hostname: rabbitmq
        # RabbitMQ accessible through app container only
        # ports:
        #     - '${FORWARD_RABBITMQ_PORT:-5672}:5672'
        #     - '${FORWARD_RABBITMQ_DASHBOARD_PORT:-15672}:15672'
        environment:
            RABBITMQ_HOST: '%'
            RABBITMQ_USER: '${RABBITMQ_USER}'
            RABBITMQ_PASSWORD: '${RABBITMQ_PASSWORD}'
            RABBITMQ_VHOST: '${RABBITMQ_VHOST}'
            RABBITMQ_QUEUE: '${RABBITMQ_QUEUE}'
        volumes:
            - './data/rabbitmq:/var/lib/rabbitmq'
        networks:
            - turahe
        healthcheck:
            test:
                - CMD
                - rabbitmq-diagnostics
                - '-q'
                - ping
            retries: 3
            timeout: 5s
        labels:
            - traefik.enable=true
            - traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.dolmebel.local`)
            - traefik.http.routers.rabbitmq.entrypoints=web
            - traefik.http.services.rabbitmq.loadbalancer.server.port=15672

    soketi:
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        environment:
            SOKETI_DEBUG: '${SOKETI_DEBUG:-1}'
            SOKETI_METRICS_SERVER_PORT: '9601'
            SOKETI_DEFAULT_APP_ID: '${PUSHER_APP_ID}'
            SOKETI_DEFAULT_APP_KEY: '${PUSHER_APP_KEY}'
            SOKETI_DEFAULT_APP_SECRET: '${PUSHER_APP_SECRET}'
        # Soketi accessible through app container only
        # ports:
        #     - '${PUSHER_PORT:-6001}:6001'
        #     - '${PUSHER_METRICS_PORT:-9601}:9601'
        networks:
            - turahe

networks:
    turahe:
        driver: bridge

