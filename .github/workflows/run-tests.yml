name: Laravel Tests

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: laravel_test
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, pdo_sqlite, bcmath, soap, sodium, gd, exif, zip, curl, fileinfo, tokenizer
        coverage: xdebug
        tools: composer:v2

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Copy environment file
      run: |
        if [ -f .env.example ]; then
          cp .env.example .env
        else
          echo "APP_NAME=Laravel" > .env
          echo "APP_ENV=testing" >> .env
          echo "APP_KEY=" >> .env
          echo "APP_DEBUG=true" >> .env
          echo "APP_URL=http://localhost" >> .env
          echo "LOG_CHANNEL=stack" >> .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=database/database.sqlite" >> .env
          echo "CACHE_DRIVER=array" >> .env
          echo "QUEUE_CONNECTION=sync" >> .env
          echo "SESSION_DRIVER=array" >> .env
          echo "SESSION_LIFETIME=120" >> .env
        fi

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Install NPM dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Generate application key
      run: php artisan key:generate

    - name: Set directory permissions
      run: |
        chmod -R 777 storage bootstrap/cache
        mkdir -p database
        touch database/database.sqlite

    - name: Create database
      run: |
        php artisan migrate --force
        php artisan db:seed --force

    - name: Execute tests (Unit and Feature tests)
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
        CACHE_DRIVER: array
        QUEUE_CONNECTION: sync
        SESSION_DRIVER: array
        MAIL_MAILER: array
      run: php artisan test --coverage --min=80

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
