services:
    traefik:
        image: traefik:v3.0
        container_name: dolmebel-traefik-prod
        restart: unless-stopped
        command:
            - --api.dashboard=true
            - --api.insecure=false
            - --providers.docker=true
            - --providers.docker.exposedbydefault=false
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
            - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-admin@dolmebel.com}
            - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
            - --log.level=INFO
            - --accesslog=true
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"  # Traefik dashboard
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - traefik-letsencrypt:/letsencrypt
        networks:
            - turahe
        labels:
            - traefik.enable=true
            - traefik.http.routers.traefik.rule=Host(`traefik.dolmebel.com`)
            - traefik.http.routers.traefik.entrypoints=websecure
            - traefik.http.routers.traefik.tls.certresolver=letsencrypt
            - traefik.http.services.traefik.loadbalancer.server.port=8080

    app:
        build:
            context: ./docker/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: turahe/dolmebel
        restart: unless-stopped
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_turahe: 1
            APP_ENV: production
            APP_DEBUG: false
            APP_URL: https://dolmebel.com
        volumes:
            - '.:/var/www/html'
        networks:
            - turahe
        depends_on:
            - pgsql
            - redis
            - meilisearch
            - minio
            - mailpit
            - rabbitmq
            - soketi
            - mysql
        labels:
            - traefik.enable=true
            - traefik.http.routers.app.rule=Host(`dolmebel.com`)
            - traefik.http.routers.app.entrypoints=websecure
            - traefik.http.routers.app.tls.certresolver=letsencrypt
            - traefik.http.services.app.loadbalancer.server.port=80
            - traefik.http.middlewares.app-headers.headers.customrequestheaders.X-Forwarded-Proto=https
            - traefik.http.routers.app.middlewares=app-headers

    pgsql:
        image: 'postgres:17-alpine'
        container_name: dolmebel-postgres-prod
        restart: unless-stopped
        environment:
            PGPASSWORD: '${DB_PASSWORD}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
        volumes:
            - 'postgres-prod-data:/var/lib/postgresql/data'
        networks:
            - turahe
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s

    redis:
        image: 'redis:alpine'
        container_name: dolmebel-redis-prod
        restart: unless-stopped
        volumes:
            - 'redis-prod-data:/data'
        networks:
            - turahe
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s

    meilisearch:
        image: 'getmeili/meilisearch:latest'
        container_name: dolmebel-meilisearch-prod
        restart: unless-stopped
        environment:
            MEILI_NO_ANALYTICS: 'true'
            MEILI_MASTER_KEY: '${MEILISEARCH_KEY}'
        volumes:
            - 'meilisearch-prod-data:/meili_data'
        networks:
            - turahe
        healthcheck:
            test:
                - CMD
                - wget
                - '--no-verbose'
                - '--spider'
                - 'http://127.0.0.1:7700/health'
            retries: 3
            timeout: 5s

    minio:
        image: 'minio/minio:latest'
        container_name: dolmebel-minio-prod
        restart: unless-stopped
        environment:
            MINIO_ROOT_USER: '${MINIO_ROOT_USER}'
            MINIO_ROOT_PASSWORD: '${MINIO_ROOT_PASSWORD}'
        volumes:
            - 'minio-prod-data:/data'
        networks:
            - turahe
        command: 'minio server /data --console-address ":8900"'
        healthcheck:
            test:
                - CMD
                - mc
                - ready
                - local
            retries: 3
            timeout: 5s

    mailpit:
        image: 'axllent/mailpit:latest'
        container_name: dolmebel-mailpit-prod
        restart: unless-stopped
        networks:
            - turahe
        labels:
            - traefik.enable=true
            - traefik.http.routers.mailpit.rule=Host(`mailpit.dolmebel.com`)
            - traefik.http.routers.mailpit.entrypoints=websecure
            - traefik.http.routers.mailpit.tls.certresolver=letsencrypt
            - traefik.http.services.mailpit.loadbalancer.server.port=8025

    rabbitmq:
        image: 'rabbitmq:4-management-alpine'
        container_name: dolmebel-rabbitmq-prod
        hostname: rabbitmq
        restart: unless-stopped
        environment:
            RABBITMQ_HOST: '%'
            RABBITMQ_USER: '${RABBITMQ_USER}'
            RABBITMQ_PASSWORD: '${RABBITMQ_PASSWORD}'
            RABBITMQ_VHOST: '${RABBITMQ_VHOST}'
            RABBITMQ_QUEUE: '${RABBITMQ_QUEUE}'
        volumes:
            - 'rabbitmq-prod-data:/var/lib/rabbitmq'
        networks:
            - turahe
        healthcheck:
            test:
                - CMD
                - rabbitmq-diagnostics
                - '-q'
                - ping
            retries: 3
            timeout: 5s
        labels:
            - traefik.enable=true
            - traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.dolmebel.com`)
            - traefik.http.routers.rabbitmq.entrypoints=websecure
            - traefik.http.routers.rabbitmq.tls.certresolver=letsencrypt
            - traefik.http.services.rabbitmq.loadbalancer.server.port=15672

    soketi:
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        container_name: dolmebel-soketi-prod
        restart: unless-stopped
        environment:
            SOKETI_DEBUG: '0'
            SOKETI_METRICS_SERVER_PORT: '9601'
            SOKETI_DEFAULT_APP_ID: '${PUSHER_APP_ID}'
            SOKETI_DEFAULT_APP_KEY: '${PUSHER_APP_KEY}'
            SOKETI_DEFAULT_APP_SECRET: '${PUSHER_APP_SECRET}'
        networks:
            - turahe

    mysql:
        image: 'mysql/mysql-server:8.0'
        container_name: dolmebel-mysql-prod
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            MYSQL_EXTRA_OPTIONS: '${MYSQL_EXTRA_OPTIONS}'
        volumes:
            - 'mysql-prod-data:/var/lib/mysql'
        networks:
            - turahe
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

networks:
    turahe:
        driver: bridge

volumes:
    postgres-prod-data:
        driver: local
    redis-prod-data:
        driver: local
    meilisearch-prod-data:
        driver: local
    minio-prod-data:
        driver: local
    rabbitmq-prod-data:
        driver: local
    mysql-prod-data:
        driver: local
    traefik-letsencrypt:
        driver: local
